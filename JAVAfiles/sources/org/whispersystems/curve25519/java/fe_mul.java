package org.whispersystems.curve25519.java;

/* compiled from: PG */
/* loaded from: classes.dex */
public class fe_mul {
    public static void fe_mul(int[] iArr, int[] iArr2, int[] iArr3) {
        long[] fe_mul1 = fe_mul1(iArr2, iArr3);
        long j = fe_mul1[0];
        long j2 = fe_mul1[1];
        long j3 = fe_mul1[2];
        long j4 = fe_mul1[3];
        long j5 = fe_mul1[4];
        long j6 = fe_mul1[5];
        long j7 = fe_mul1[6];
        long j8 = fe_mul1[7];
        long j9 = (j + 33554432) >> 26;
        long j10 = j2 + j9;
        long j11 = j - (j9 << 26);
        long j12 = (j5 + 33554432) >> 26;
        long j13 = j6 + j12;
        long j14 = (j10 + 16777216) >> 25;
        long j15 = j3 + j14;
        long j16 = (j13 + 16777216) >> 25;
        long j17 = j7 + j16;
        long j18 = (j15 + 33554432) >> 26;
        long j19 = j4 + j18;
        long j20 = (j17 + 33554432) >> 26;
        long j21 = j8 + j20;
        long j22 = (j21 + 16777216) >> 25;
        long j23 = fe_mul1[8] + j22;
        long j24 = (j23 + 33554432) >> 26;
        long j25 = fe_mul1[9] + j24;
        long j26 = (j25 + 16777216) >> 25;
        long j27 = j11 + (19 * j26);
        long j28 = (j27 + 33554432) >> 26;
        iArr[0] = (int) (j27 - (j28 << 26));
        iArr[1] = (int) ((j10 - (j14 << 25)) + j28);
        iArr[2] = (int) (j15 - (j18 << 26));
        long j29 = (j19 + 16777216) >> 25;
        iArr[3] = (int) (j19 - (j29 << 25));
        long j30 = (j5 - (j12 << 26)) + j29;
        long j31 = (j30 + 33554432) >> 26;
        iArr[4] = (int) (j30 - (j31 << 26));
        iArr[5] = (int) ((j13 - (j16 << 25)) + j31);
        iArr[6] = (int) (j17 - (j20 << 26));
        iArr[7] = (int) (j21 - (j22 << 25));
        iArr[8] = (int) (j23 - (j24 << 26));
        iArr[9] = (int) (j25 - (j26 << 25));
    }

    public static long[] fe_mul1(int[] iArr, int[] iArr2) {
        int i = iArr[0];
        int i2 = iArr[1];
        int i3 = iArr[2];
        int i4 = iArr[3];
        int i5 = iArr[4];
        int i6 = iArr[5];
        int i7 = iArr[6];
        int i8 = iArr[7];
        int i9 = iArr[8];
        int i10 = iArr[9];
        int i11 = iArr2[0];
        int i12 = iArr2[1];
        int i13 = i12 * 19;
        int i14 = iArr2[2];
        int i15 = i14 * 19;
        int i16 = iArr2[3];
        int i17 = i16 * 19;
        int i18 = iArr2[4];
        int i19 = i18 * 19;
        int i20 = iArr2[5];
        int i21 = i20 * 19;
        int i22 = iArr2[6];
        int i23 = iArr2[7];
        int i24 = i23 * 19;
        int i25 = iArr2[8];
        int i26 = i25 * 19;
        int i27 = iArr2[9];
        int i28 = i6 + i6;
        long j = i;
        long j2 = i11;
        long j3 = i12;
        long j4 = i14;
        long j5 = i16;
        long j6 = i18;
        long j7 = i20;
        long j8 = i22;
        long j9 = i23;
        long j10 = i25;
        long j11 = i2;
        long j12 = i3;
        long j13 = i4;
        long j14 = i5;
        long j15 = i6;
        long j16 = i7;
        long j17 = i8;
        long j18 = i9;
        long j19 = i10;
        long j20 = i27 * 19;
        long j21 = i2 + i2;
        long j22 = i26;
        long j23 = i24;
        long j24 = i4 + i4;
        long j25 = j12 * j22;
        long j26 = i22 * 19;
        long j27 = i21;
        long j28 = i28;
        long j29 = j14 * j26;
        long j30 = i19;
        long j31 = i17;
        long j32 = i8 + i8;
        long j33 = j16 * j30;
        long j34 = i15;
        long j35 = i10 + i10;
        long j36 = j13 * j6;
        long j37 = j13 * j8;
        long j38 = j14 * j4;
        long j39 = j14 * j5;
        long j40 = j14 * j6;
        long j41 = j7 * j14;
        long j42 = j15 * j2;
        long j43 = j15 * j4;
        long j44 = j6 * j15;
        long j45 = j15 * j22;
        long j46 = j16 * j2;
        long j47 = j16 * j3;
        long j48 = j16 * j4;
        long j49 = j5 * j16;
        long j50 = j16 * j26;
        long j51 = j16 * j23;
        long j52 = j16 * j22;
        long j53 = j16 * j20;
        long j54 = j32 * j3;
        long j55 = j17 * j30;
        long j56 = j18 * j31;
        long j57 = j18 * j27;
        long j58 = j18 * j26;
        long j59 = j30 * j19;
        return new long[]{(j * j2) + (j21 * j20) + j25 + (j24 * j23) + j29 + (j28 * j27) + j33 + (j32 * j31) + (j18 * j34) + (i13 * j35), (j * j3) + (j11 * j2) + (j12 * j20) + (j13 * j22) + (j14 * j23) + (j15 * j26) + (j16 * j27) + j55 + j56 + (j34 * j19), (j * j4) + (j21 * j3) + (j12 * j2) + (j24 * j20) + (j14 * j22) + (j28 * j23) + j50 + (j32 * j27) + (j18 * j30) + (j35 * j31), (j * j5) + (j11 * j4) + (j12 * j3) + (j13 * j2) + (j14 * j20) + j45 + j51 + (j17 * j26) + j57 + j59, (j * j6) + (j21 * j5) + (j12 * j4) + (j24 * j3) + (j14 * j2) + (j28 * j20) + j52 + (j32 * j23) + j58 + (j35 * j27), (j * j7) + (j11 * j6) + (j12 * j5) + (j13 * j4) + (j14 * j3) + j42 + j53 + (j17 * j22) + (j18 * j23) + (j26 * j19), (j * j8) + (j21 * j7) + (j12 * j6) + (j24 * j5) + j38 + (j28 * j3) + j46 + (j32 * j20) + (j18 * j22) + (j35 * j23), (j * j9) + (j11 * j8) + (j12 * j7) + j36 + j39 + j43 + j47 + (j17 * j2) + (j18 * j20) + (j22 * j19), (j * j10) + (j21 * j9) + (j12 * j8) + (j24 * j7) + j40 + (j28 * j5) + j48 + j54 + (j18 * j2) + (j35 * j20), (i27 * j) + (j11 * j10) + (j9 * j12) + j37 + j41 + j44 + j49 + (j4 * j17) + (j3 * j18) + (j2 * j19)};
    }
}
